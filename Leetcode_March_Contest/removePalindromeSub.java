package Leetcode_March_Contest;

/* Given a string s consisting only of letters 'a' and 'b'. In a single step you can remove one palindromic subsequence from s.

Return the minimum number of steps to make the given string empty.

A string is a subsequence of a given string, if it is generated by deleting some characters of a given string without changing its order.

A string is called palindrome if is one that reads the same backward as well as forward.*/


class removePalindromeSub {
	public int removePalindromeSub(String s) {
        if(s.isBlank()) return 0; //if blank no string then
        if(isPalindrome(s)) {
            return 1;// if the string is a palindrome
        }
        return 2;// else we will require 2 steps to remove palindrome subsequence
    }
    boolean isPalindrome(String s){
        int left=0,right=s.length()-1; 
        
        while(left<right){
            if(s.charAt(left)!=s.charAt(right)){ //start from the left and right of the string & check if left=right or not
                return false;
            }
            left++;
            right--;
        }
        return true;
    }
}


Reconstruct Original Digits from English:-

Given a non-empty string containing an out-of-order English representation of digits 0-9, output the digits in ascending order.

Note:
Input contains only lowercase English letters.
Input is guaranteed to be valid and can be transformed to its original digits. That means invalid inputs such as "abc" or "zerone" are not permitted.
Input length is less than 50,000.

Example 1:
Input: "owoztneoer"
Output: "012"

Example 2:
Input: "fviefuro"
Output: "45"
______________________________________________________________________________________________________________
class Solution {
    public String originalDigits(String s) {
        int[] count = new int[26];
        for(char c: s.toCharArray()) count[c-'a']++;
        
        int[] num = new int[10];
        //unique Cases
        num[0] = count['z'-'a'];
        num[2] = count['w'-'a'];
        num[4] = count['u'-'a'];
        num[6] = count['x'-'a'];
        num[8] = count['g'-'a'];
        
        //derived cases
        num[1] = count['o'-'a']-num[0]-num[2]-num[4];
        num[3] = count['h'-'a']-num[8];
        num[5] = count['f'-'a']-num[4];
        num[7] = count['s'-'a']-num[6];
        num[9] = count['i'-'a']-num[5]-num[6]-num[8];
        
        StringBuilder sb = new StringBuilder();
        for(int i=0; i<10; i++ ){
            while(num[i]-- > 0)
                sb.append(i);
        }
        return sb.toString();
    }
}
//TC: O(n)
//SC: O(1)
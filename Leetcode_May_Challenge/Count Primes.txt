Count Primes:-

Count the number of prime numbers less than a non-negative number, n.

Example 1:
Input: n = 10
Output: 4
Explanation: There are 4 prime numbers less than 10, they are 2, 3, 5, 7.

Example 2:
Input: n = 0
Output: 0

Example 3:
Input: n = 1
Output: 0
__________________________________________________________________________________________________________________________________
class Solution {
    public int countPrimes(int n) {
        if(n<=2) return 0;
        boolean[] composites = new boolean[n];
        int limit = (int)Math.sqrt(n);
        //Array of composites --> True represent composite and False represents primes
        for(int i=2; i<=limit; i++){
            if(composites[i] == false){
                //Mark all the multiples of i as true
                //the first index to be flipped to true is i*i
                for(int j=i*i; j<n; j+=i){
                    composites[j] = true;
                }
            }
        }
        int count =0;
        for(int i=2; i<n; i++){
            if(composites[i] == false) count++;
        }
        return count;
    }
}

//TC: O(root of n log log N)
//SC: O(N)